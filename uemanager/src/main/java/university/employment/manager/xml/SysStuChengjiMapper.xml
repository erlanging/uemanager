<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="university.employment.manager.dao.SysStuChengjiMapper" >
  <resultMap id="BaseResultMap" type="university.employment.manager.entity.SysStuChengji" >
    <id column="chjId" property="chjid" jdbcType="INTEGER" />
    <result column="stuid" property="stuid" jdbcType="INTEGER" />
    <result column="coursename" property="coursename" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="term" property="term" jdbcType="VARCHAR" />
    <result column="examtime" property="examtime" jdbcType="VARCHAR" />
    <result column="studentid" property="studentid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    chjId, stuid, coursename, type, point, credit, term, examtime, studentid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="university.employment.manager.entity.SysStuChengjiExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_stu_chengji
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_stu_chengji
    where chjId = #{chjid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_stu_chengji
    where chjId = #{chjid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="university.employment.manager.entity.SysStuChengjiExample" >
    delete from sys_stu_chengji
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="university.employment.manager.entity.SysStuChengji" >
    insert into sys_stu_chengji (chjId, stuid, coursename, 
      type, point, credit, 
      term, examtime, studentid
      )
    values (#{chjid,jdbcType=INTEGER}, #{stuid,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{point,jdbcType=INTEGER}, #{credit,jdbcType=INTEGER}, 
      #{term,jdbcType=VARCHAR}, #{examtime,jdbcType=VARCHAR}, #{studentid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="university.employment.manager.entity.SysStuChengji" >
    insert into sys_stu_chengji
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="chjid != null" >
        chjId,
      </if>
      <if test="stuid != null" >
        stuid,
      </if>
      <if test="coursename != null" >
        coursename,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="term != null" >
        term,
      </if>
      <if test="examtime != null" >
        examtime,
      </if>
      <if test="studentid != null" >
        studentid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="chjid != null" >
        #{chjid,jdbcType=INTEGER},
      </if>
      <if test="stuid != null" >
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null" >
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="term != null" >
        #{term,jdbcType=VARCHAR},
      </if>
      <if test="examtime != null" >
        #{examtime,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="university.employment.manager.entity.SysStuChengjiExample" resultType="java.lang.Integer" >
    select count(*) from sys_stu_chengji
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_stu_chengji
    <set >
      <if test="record.chjid != null" >
        chjId = #{record.chjid,jdbcType=INTEGER},
      </if>
      <if test="record.stuid != null" >
        stuid = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null" >
        coursename = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.point != null" >
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.term != null" >
        term = #{record.term,jdbcType=VARCHAR},
      </if>
      <if test="record.examtime != null" >
        examtime = #{record.examtime,jdbcType=VARCHAR},
      </if>
      <if test="record.studentid != null" >
        studentid = #{record.studentid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_stu_chengji
    set chjId = #{record.chjid,jdbcType=INTEGER},
      stuid = #{record.stuid,jdbcType=INTEGER},
      coursename = #{record.coursename,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=INTEGER},
      term = #{record.term,jdbcType=VARCHAR},
      examtime = #{record.examtime,jdbcType=VARCHAR},
      studentid = #{record.studentid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="university.employment.manager.entity.SysStuChengji" >
    update sys_stu_chengji
    <set >
      <if test="stuid != null" >
        stuid = #{stuid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null" >
        coursename = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="term != null" >
        term = #{term,jdbcType=VARCHAR},
      </if>
      <if test="examtime != null" >
        examtime = #{examtime,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null" >
        studentid = #{studentid,jdbcType=VARCHAR},
      </if>
    </set>
    where chjId = #{chjid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="university.employment.manager.entity.SysStuChengji" >
    update sys_stu_chengji
    set stuid = #{stuid,jdbcType=INTEGER},
      coursename = #{coursename,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      point = #{point,jdbcType=INTEGER},
      credit = #{credit,jdbcType=INTEGER},
      term = #{term,jdbcType=VARCHAR},
      examtime = #{examtime,jdbcType=VARCHAR},
      studentid = #{studentid,jdbcType=VARCHAR}
    where chjId = #{chjid,jdbcType=INTEGER}
  </update>
  
  <select id="selectByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select scj.* from sys_stu_info sif 
  	LEFT JOIN sys_stu_chengji scj 
  	on sif.stuid = scj.stuid 
  	where sif.uid=#{uid,jdbcType=INTEGER}
  </select>
  
</mapper>